import process from 'process';
import esbuild from 'esbuild';
import builtins from 'builtin-modules';

const prod = process.argv[2] === 'production';
const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/`

const renameImportPlugin = {
		name: 'rename-import-plugin',
		setup(build) {
			build.onResolve({ filter: /punycode/ }, (args) => {
				// Change the import path to "punycode" (without trailing slash)
				return { path: 'punycode', namespace: 'rename-import-ns' };
			});

			build.onLoad({ filter: /^punycode(\/|$)/, namespace: 'rename-import-ns' }, async (args) => {
				// Load the original file content and return it as-is
				return { contents: `export * from "${args.path}"` };
			});
		},
};


esbuild.build({
		banner: {
			js: banner,
		},
		bundle: true,
		entryPoints: ['src/main.ts'],
		external: [
			'obsidian',
			'electron',
			'codemirror',
			'@codemirror/autocomplete',
			'@codemirror/closebrackets',
			'@codemirror/commands',
			'@codemirror/fold',
			'@codemirror/gutter',
			'@codemirror/history',
			'@codemirror/language',
			'@codemirror/rangeset',
			'@codemirror/rectangular-selection',
			'@codemirror/search',
			'@codemirror/state',
			'@codemirror/stream-parser',
			'@codemirror/text',
			'@codemirror/view',
			...builtins,
		],
		format: 'cjs',
		logLevel: 'info',
		minify: prod,
		outfile: 'main.js',
		sourcemap: prod ? false : 'inline',
		target: 'es2016',
		treeShaking: true,
	plugins: [renameImportPlugin]
	})
	.catch(() => process.exit(1));
