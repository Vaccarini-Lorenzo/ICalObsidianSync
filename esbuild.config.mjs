import { createRequire as topLevelCreateRequire } from 'module'
const require = topLevelCreateRequire(import.meta.url);
import process from 'process';
import esbuild from 'esbuild';
import builtins from 'builtin-modules';
const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/`

const prod = process.argv[2] === 'prod';

esbuild.build({
	banner: {
		js: banner,
	},
	loader: { ".node": "file" },
	bundle: true,
	entryPoints: ['src/plugin/main.ts'],
	external: [
		'obsidian',
		'electron',
		'codemirror',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/commands',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/view',
		...builtins,
	],
	format: 'cjs',
	logLevel: 'info',
	minify: prod ? true: false,
	minifySyntax: prod ? true: false,
	minifyWhitespace: prod ? true: false,
	minifyIdentifiers: prod ? true: false,
	outfile: 'main.js',
	sourcemap: prod ? true: "inline",
	target: 'es2016',
	treeShaking: true,
	})
	.catch(() => process.exit(1));
